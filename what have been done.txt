w * Kita nak update yang baru tapi kalau buat migration unutk alter table
* kene buat migration file baru.
* run php artisan make:migration namaaction_nama_table_action_apa
* tambah schema untuk table function.
* comment balik yang untuk specific user sahaja. 
* cater masalah kguna terniary operator
* enctype tu memang penting untuk hantar file
* php artisan storage:link
* jangan percaya input dari user. so, kita control dari sini
* guna nama sebagai id. 
* go through how to make dr; Disaster recovery
* stress-test. 16cpu 32 gb ram
* cara nak buka attachmetn
* edit kat file show.blade.php
* dah uncomment balik
* !bug Fix: bukan kene  letak enctype tu kat input. tapi dekat element form tag.
* belajar macam mana system web function. 
*buat cron job untuk save file every 3 hari. buat satu script untuk backup db; kat mana nak refer? laravel command. artisan console.
* kene config extension.
* cuba go through magic method.unit testing.
* model boleh buat macam macam benda.
!Fahami fundementals. Betul2.
* Laravel connect multiple database.
* go through and master kubernetes.
* kita kene ada extension. odbc driver. untuk connect.
* boleh define kat controller. kat env define db2 yang ada. and then define, db2 lain tu dalam config/database.php. define je.
* sebelum kita boleh define sesuatu kita kene kenal dulu. apa yang kita nak define tu. 
* lain masalah lain id.
* uuid. universally uniq id. dia gengerate number through time and date. so, brother ni baca semua even sampai ke wiki.
^ Part setup usually lama. 
* Laravel validation. boleh validate dari client atau server.
* guna inheritance
* old ni guna untuk
* update rule
* go through semula regex
* macam mana nak buat audit trail?
*  Structured Programming-> Oop-> Solid-> DP.
* validation usually kita buat dekat controller.
* Sputty package untuk resize gambar
* laravel form request validation..
* its not a good practice nak letak rules dekat dalam validate. controller kene  nipis. model kene fat.'
* run>> php artisan make:request StoreTrainingRequest
* Data Engineer
* bitquery. nosql vs rdbms.
* laravel ada limit. learn these strength and understand these limits.
* j meter stress test
* Buat class untuk hold and handle request.:dah create pindahkan validation rules into request, pastu includekan class tu.
* Macam mana orang attack kita. its a cyber warfare. LEARN. guna ssh
* macam mana nak override mesej kalau tak suka?
*letak nama item tu, dengan nama error tu.
* localization {{}}
* Laravel : Search
* buat div yang boleh float kat belah kiri. lepas tu test. tengok dpt tak keyword.
* post method je perlukan csrf
* kalau assign pakai => , kalau nak access isinya guna ->
* Kalau nak sort.  boleh.
* test dekat tinker >> $user->trainings()->limit(3)->toSql()
* kalau nak test kat tinker guna facade>> \DB::table('trainings')->orderBy('created_at','asc')->toSql()
* ni note aku waktu ni



=================
DAY 04:
+++++++++++++++++

1. Sending EMail.
* "guna mailtrap", package. mail server kita free. tapi ada limitation.
* kalau kita guna mail server lain, nanti google akan consider spam.
* "MAIL SERVER" yang quality. takut nnty diorang guna spam.
* Buat satu subdomain untuk system  email.   kalau marketing buat marketing. kalau system guna buat benda lain.. 
* "mail catcher ", free dan bolehd install kat login

------------------
Mail Trap:
------------------

* copy credential terus paste dekat env
* mail_from_address ; tak kisah email apa2. tak wujud pun tak pe.
* done setup smtp setting.
* Boleh try tengok aws. 

* Bila kita create training dia akan hantar email.
* "mail facade"
* edit cantik2 email tu pastu boleh hantar.
* Mail::send('template maana nak send','dynamic data',functionnakhantar)
* ni baru static ke email specific
* boleh guna klas.
* staging mail server. kita akan nampak sendiri.
* use Mail sebab kita guna mail punya facade.

* broken pipe maybe sebab wifi.

* dynamic data, kita ubah. 
* adjsut dekat array
* ['a' => something]
* a tu akan dipassing ke blade.php 

* Mailable Classes.
* search "mail classes."
* email provider yang laju.
* php artisan make:mail namaMail
* construct + build.
* apa nak inject + apa nak buat
* construct + helper
* nak guna  class tadi. Mail::to('kepada siapa'->send(new location kat mana atau boleh declare.))
* kita panggil class tu punya constructor.
* cara nak inject dynamic data.
* guna ikut public.
* instantiate that object
* use case oop dengan design pattern. 
* hafal buku.

* error Argument 1 passed to App\Mail\TrainingCreated::__construct() must be an instance of App\Model\Training, instance of App\Models\Training given, called in C:\laragon\www\day04\app\Http\Controllers\TrainingController.php on line 110
* silap eja models untuk define Training punya model

* Bila install new project. 
* composer install 
* untuk install smua package kat dalam vendor.
 * code .
 * update/buat .env
 * php artisan key:generate
*

--------
Cara Nak Buat Job.

* kita tak nak user tunggu. so, buat serentak untuk semua. 
* kita bawak process hantar email tadi, tapi guna job
* benda2 penting macam tu boleh dihandle.
* boleh je guna que. tapi kita guna job.
* method untuk buat processing kat belaang.
* Search "laravel Job"
* guna que. supaya user tak payah tunggu,

* automatekan background process.
* Dig deeper dalam Que. untuk kelajuan.
* Amazon sqs untuk manage job
* rdms ni boleh manage job

* driver notes. 
* kene ada satu table untuk simpan semua log yang job kita buat.
* redis kita tak guna pun lagi. redis ni rdms.
* php artisan make:job NamaJob.

* Class structure tu. apa yang kita akan dapat.
* kita nak guna driver, driver database. instead of rdbms. 
* bila kita dispatch job, 

Î» php artisan migrate:status
+------+---------------------------------------------------------------+-------+
| Ran? | Migration                                                     | Batch |
+------+---------------------------------------------------------------+-------+
| Yes  | 2014_10_12_000000_create_users_table                          | 1     |
| Yes  | 2014_10_12_100000_create_password_resets_table                | 1     |
| Yes  | 2019_08_19_000000_create_failed_jobs_table                    | 1     |
| Yes  | 2020_12_14_071318_create_trainings_table                      | 1     |
| Yes  | 2020_12_22_024901_alter_trainings_table_add_attachment_column | 2     |
| No   | 2020_12_28_034310_create_jobs_table                           |       |
+------+---------------------------------------------------------------+-------+


* define dekat env. que_connection.
* database/redis/sqs <- bergantung pada connection mana kita nak pakai.

* php artisan make job
* SendEmailJob
* cara nak replace function dekat dalam controller
* copy function yang lama sangt tu, declaire mail punya facade. define satu property training 

* xde supervisor nak run job.
* gambar tu jadikan job
* bug fix. $this-> training =$training;